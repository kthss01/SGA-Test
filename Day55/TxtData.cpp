#include "stdafx.h"
#include "TxtData.h"


TxtData::TxtData()
{
}


TxtData::~TxtData()
{
}

HRESULT TxtData::Init()
{
	return S_OK;
}

void TxtData::TxTSave(char * saveFileName, vector<string> vStr)
{
	// api가 가지고있는 save 함수 사용
	HANDLE file;
	char str[256];
	DWORD write;

	// 복사해주는데 크기까지 설정가능한 거
	strncpy_s(str, 256, VectorArrayCombine(vStr), 256);

	// CreateFile Binary 형식으로 들어감
	// Binary 16진수 데이터 형식으로 들어감
	// Binary 한글 관련으로 문제가 있었음
	file = CreateFile(
		saveFileName,	// 생성할 파일 또는 로드할 파일의 이름
		GENERIC_WRITE,	// 파일이나 장치를 만들거나 열때의 권한
		0,				// 파일 공유 모드 입력
		NULL,			// 파일 또는 장치를 열 때 보안 및 특성
		// 항상 처음부터 작성하겠다는거 다 지우고
		// 여기 바꿔주면 라인별로 넣을 수 있음
		CREATE_ALWAYS,	// 파일이나 장치를 열 때 취할 행동
		FILE_ATTRIBUTE_NORMAL,	// 파일, 장치를 열 때, 만들 때 갖는 특성
		NULL			// 만들어질 파일이 갖게 될 특성 etc 저장되는 핸들
	);

	WriteFile(file, str, 256, &write, NULL);
	CloseHandle(file);
}

char * TxtData::VectorArrayCombine(vector<string> vArray)
{
	char str[256];
	ZeroMemory(str, sizeof(str));

	for (int i = 0; i < vArray.size(); i++) {
		strncat_s(str, 256, vArray[i].c_str(), 256);

		// 마지막 문자는 제외하려고 해서
		if ((i + 1) < vArray.size()) {
			strcat_s(str, ",");
		}
		
		//// 이거 추가하면 좋음 -> 이렇게 하면 안될듯
		//// 읽어올 때 문제 생김
		//if (i == vArray.size() - 1)
		//	strcat_s(str, "\r\n\0");
	}

	return str;
}

vector<string> TxtData::TxTLoad(char * loadFileName)
{
	HANDLE file;
	char str[256];
	DWORD read;

	ZeroMemory(str, sizeof(str));

	file = CreateFile(
		loadFileName,
		GENERIC_READ,
		0,
		NULL,
		OPEN_EXISTING,
		FILE_ATTRIBUTE_NORMAL,
		NULL
	);

	ReadFile(file, str, 256, &read, NULL);
	CloseHandle(file);

	return CharArraySeparation(str);
}

vector<string> TxtData::CharArraySeparation(char charArray[])
{
	vector<string> vArray;
	char* separator = (char*)",";

	char* context = NULL;

	char* token = strtok_s(charArray, separator, &context);
	vArray.push_back(token);
	while (token) {
		token = strtok_s(NULL, separator, &context);
		if(token != NULL)
			vArray.push_back(token);
	}

	return vArray;
}

void TxtData::TextWrite(vector<string> vStr)
{
	char str[256];
	DWORD write;

	strncpy_s(str, 256, VectorArrayCombine(vStr), 256);
	WriteFile(file, str, 256, &write, NULL);
}

vector<vector<string>> TxtData::TextRead()
{
	vector< vector<string> > vvStr;

	char str[256];
	DWORD read = 0;

	int cnt = 0;
	while(true) {
		ReadFile(file, str, 256, &read, NULL);
		if (read <= 0) break;
		vvStr.push_back(CharArraySeparation(str));
	};


	return vvStr;
}
